name: Master CI

on:
  push:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: create deployment
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              required_contexts: [],
              environment: 'integration'
            })
      - uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(context)
      #res = await console.log(res.data.id)
      # do the deployment ... possibly in a different workflow that listens to 'deployment' event
      # - uses: actions/github-script@0.4.0
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       github.repos.createDeploymentStatus({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: context.sha,
      #         required_contexts: [],
      #         environment: 'integration'
      #       })



      # - uses: actions/checkout@v1
      # - name: Set up JDK 1.8
      #   uses: actions/setup-java@v1
      #   with:
      #     java-version: 1.8
      # - uses: actions/cache@v1
      #   with:
      #     path: ~/.gradle/caches
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-
      # - name: Build
      #   run: ./gradlew build
      # - name: Integration tests
      #   run: ./gradlew integrationTest
      # - name: Publish packages
      #   run: ./gradlew publish -Pgpr.user=${{ github.actor }} -Pgpr.token=${{ secrets.GITHUB_TOKEN }}
      # - name: Upload test reports
      #   if: always()
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: test-report
      #     path: build/reports/tests/test

  # verify:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:



#  test-self-hosted:
#
#    runs-on: self-hosted
#
#    steps:
#      - name: Build
#        run: echo "hello!" > hello.txt